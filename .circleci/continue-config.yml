# version: 2.1

# orbs:
#   python: circleci/python@2.1.1
#   gcp-gcr: circleci/gcp-gcr@0.15.0
#   gcp-gke: circleci/gcp-gke@1.4.0
#   kubernetes: circleci/kubernetes@1.3.0
#   snyk: snyk/snyk@1.2.3

# parameters:
#   mysite:
#     type: boolean
#     default: false
#   polls:
#     type: boolean
#     default: false
#   circle-ci:
#     type: boolean
#     default: false
#   docs:
#     type: boolean
#     default: false
#   run-them-all:
#     type: boolean
#     default: false

# executors:
#   python:
#       docker:
#           - image: cimg/python:3.10.7

# commands:
#   set-build-env:
#     description: "Set environment variables needed for building"
#     steps:
#       - checkout
#       - run:
#           name: Setup Build Environment Variables
#           command: |
#             echo "export VERSION=$(cat VERSION)" >> "$BASH_ENV"
#             source $BASH_ENV

# jobs:
#   test:
#     executor: python
#     parallelism: 2
#     steps:
#       - checkout
#       - python/install-packages:
#           pkg-manager: pip
#       - run:
#           name: Run tests
#           command: |
#             pytest --circleci-parallelize --junit-xml=test-results/junit.xml
#       - store_test_results:
#           path: test-results
#       - store_artifacts:
#           path: test-results

#   lint:
#     executor: python
#     steps:
#       - checkout
#       - python/install-packages:
#           pkg-manager: pip
#       - run:
#           command: |
#             pylint polls --exit-zero
#           name: linting

#   snyk-scan:
#     executor: python
#     steps:
#       - checkout
#       - python/install-packages:
#           pkg-manager: pip
#       - snyk/scan:
#           severity-threshold: critical

#   build-and-push-image:
#     machine:
#       image: ubuntu-2004:current
#       docker_layer_caching: true
#     description: Build and push image to Google Container Registry
#     steps:
#       - checkout
#       - set-build-env
#       - gcp-gcr/gcr-auth:
#           registry-url: us.gcr.io
#       - gcp-gcr/build-image:
#           registry-url: us.gcr.io
#           image: alec-buchanan-demo
#           tag: "${VERSION}"
#       - gcp-gcr/push-image:
#           registry-url: us.gcr.io
#           image: alec-buchanan-demo
#           tag: "${VERSION}"

#   update-deployment:
#     docker:
#       - image: cimg/base:edge-18.04
#     steps:
#       - checkout
#       - run: sudo apt-get update && sudo apt-get install gettext-base graphviz
#       - set-build-env
#       - run:
#           name: Update image & version in manifest
#           command: |
#             envsubst < /home/circleci/project/deployment.yaml > modified-deployment.yaml
#             cat modified-deployment.yaml
#       - gcp-gke/update-kubeconfig-with-credentials:
#           install-kubectl: true
#           perform-login: true
#           cluster: alec-buchanan-demo
#       - kubernetes/create-or-update-resource:
#           namespace: default
#           resource-file-path: modified-deployment.yaml
#       - run: kubectl rollout status deployment/alec-buchanan-demo-v"${VERSION}"
#       - run:
#           name: Update image & version in manifest
#           command: |
#             envsubst < /home/circleci/project/deployment.yaml > modified-deployment.yaml
#             cat modified-deployment.yaml

#   docs:
#     machine: true
#     steps:
#       - checkout
#       - run: "echo 'Hello from Docs!'"
#       - run: cat docs/docs.txt

# workflows:
# #  circle-ci:
# #    when:
# #      or:
# #        - << pipeline.parameters.circle-ci >>
# #        - << pipeline.parameters.run-them-all >>
# #    jobs:
# #      - test
# #      - lint
# #      - snyk-scan
# #      - build-and-push-image:
# #          requires: [ "test", "lint", "snyk-scan" ]
# #      - manual-approval:
# #          type: approval
# #          requires:
# #            - build-and-push-image
# #      - update-deployment:
# #          requires:
# #            - manual-approval

#   docs:
#     when:
#       or:
#         - << pipeline.parameters.docs >>
#         - << pipeline.parameters.run-them-all >>
#     jobs:
#       - docs

#   mysite:
#     when:
#       or:
#         - << pipeline.parameters.mysite >>
#         - << pipeline.parameters.run-them-all >>
#     jobs:
#       - test
#       - lint
#       - snyk-scan
#       - build-and-push-image:
#           requires: [ "test", "lint", "snyk-scan" ]
#       - manual-approval:
#           type: approval
#           requires:
#             - build-and-push-image
#       - update-deployment:
#           requires:
#             - manual-approval

#   polls:
#     when:
#       or:
#         - << pipeline.parameters.polls >>
#         - << pipeline.parameters.run-them-all >>
#     jobs:
#       - test
#       - lint
#       - snyk-scan
#       - build-and-push-image:
#           requires: [ "test", "lint", "snyk-scan" ]
#       - manual-approval:
#           type: approval
#           requires:
#             - build-and-push-image
#       - update-deployment:
#           requires:
#             - manual-approval