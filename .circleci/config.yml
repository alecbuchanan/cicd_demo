version: 2.1

orbs:
 python: circleci/python@2.1.1
 gcp-gcr: circleci/gcp-gcr@0.15.0
 gcp-gke: circleci/gcp-gke@1.4.0
 kubernetes: circleci/kubernetes@1.3.0
 snyk: snyk/snyk@1.2.3
 aws-cli: circleci/aws-cli@3.1
 aws-ecr: circleci/aws-ecr@8.1.3

executors:
 python:
     docker:
         - image: cimg/python:3.10.7

commands:
 set-build-env:
   description: "Set environment variables needed for building"
   steps:
     - checkout
     - run:
         name: Setup Build Environment Variables
         command: |
           echo "export VERSION=$(cat VERSION)" >> $BASH_ENV
           source $BASH_ENV

jobs:
 test:
   executor: python
   parallelism: 4
   steps:
     - checkout
     - python/install-packages:
         pkg-manager: pip
     - run:
         name: Run tests
         command: |
          TESTFILES=$(circleci tests glob "polls/polls_tests.py" | circleci tests split --split-by=timings)
          pytest $TESTFILES --junit-xml=test-results/junit.xml
     - store_test_results:
         path: test-results
     - store_artifacts:
         path: test-results

 lint:
   executor: python
   steps:
     - checkout
     - python/install-packages:
         pkg-manager: pip
     - run:
         command: |
           pylint polls --exit-zero
         name: linting

#  snyk-scan:
#    executor: python
#    steps:
#      - checkout
#      - python/install-packages:
#          pkg-manager: pip
#      - snyk/scan:
#          severity-threshold: critical

 build-and-push-image:
   machine:
     image: ubuntu-2004:current
     docker_layer_caching: true
   description: Build and push image to ECR
   steps:
     - checkout
     - set-build-env
    #  - aws-cli/setup:
    #      role-arn: AWS_ROLE_ARN
    #      aws-region: AWS_REGION
    #      proflie-name: "CCI_DEMO"
    #  - run:
    #    name: Log Into ECR
    #    command: |
    #      aws ecr get-login-password --profile "CCI_DEMO"
     - aws-ecr/ecr-login:
          assume-web-identity: true
          region: AWS_REGION
          registry-id: AWS_ECR_REGISTRY_ID
          role-arn: AWS_ROLE_ARN
     - aws-ecr/build-and-push-image:
          checkout: false
          region: AWS_REGION
          repo: alecbuchanandemo-cci
          tag: "${VERSION}"



     

#  update-deployment:
#    docker:
#      - image: cimg/base:edge-18.04
#    steps:
#      - checkout
#      - run: sudo apt-get update && sudo apt-get install gettext-base graphviz
#      - set-build-env
#      - run:
#          name: Update image & version in manifest
#          command: |
#            envsubst < /home/circleci/project/deployment.yaml > modified-deployment.yaml
#            cat modified-deployment.yaml
#      - gcp-gke/update-kubeconfig-with-credentials:
#          install-kubectl: true
#          perform-login: true
#          cluster: alec-buchanan-demo
#      - kubernetes/create-or-update-resource:
#          namespace: default
#          resource-file-path: modified-deployment.yaml
#      - run: kubectl rollout status deployment/alec-buchanan-demo-v"${VERSION}"
#      - run:
#          name: Update image & version in manifest
#          command: |
#            envsubst < /home/circleci/project/deployment.yaml > modified-deployment.yaml
#            cat modified-deployment.yaml

workflows:
  build-test-deploy:
    jobs:
      # - test
      # - lint
      # - snyk-scan
      - build-and-push-image:
          context: aws
      #     requires: ["test", "lint", "snyk-scan"]
      # - manual-approval:
      #     type: approval
      #     requires:
      #       - build-and-push-image
      # - update-deployment:
      #     requires:
      #       - manual-approval


# ##########################################################################################################################
# setup workflows ##
# version: 2.1

# # denotes that it is setup workflow
# setup: true

# # using the path filtering orb
# orbs:
#    path-filtering: circleci/path-filtering@0.1.1

# # workflow using path-filtering orb (w/ built in continuation)
# workflows:
#   setup-workflow:
#     jobs:
#       - path-filtering/filter:
#           base-revision: main
#           config-path: .circleci/continue-config.yml
#           mapping: |
#             mysite/.* mysite true
#             polls/.* polls true
#             .circleci/.* circle-ci true
#             docs/.* docs true
#             shared/.* run-them-all true